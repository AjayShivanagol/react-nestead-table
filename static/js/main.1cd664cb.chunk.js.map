{"version":3,"sources":["nestead-table/ControlButtons.js","nestead-table/index.js","nestead-table/NesteadTable.js","App.js","index.js"],"names":["ControlButtons","Component","onTerminateClick","console","log","onRestartClick","onCancelClick","render","selectedItems","this","props","type","className","onClick","disabled","length","getTextWidth","text","font","minWidth","canvas","document","createElement","context","getContext","metrics","measureText","Math","max","width","isArray","val","Array","isObject","constructor","Object","isHtml","split","pop","includes","ReactNestedTable","super","state","masterChecked","allData","data","expanded","excludeColoumns","isItemsSelected","onMasterCheck","e","obj","templist","map","item","select","target","checked","objectLoop","keys","forEach","key","setState","onItemCheck","tempSelectedItem","id","insertUniqueObject","arr","some","o","push","filter","el","subItems","num","parseFloat","toString","dataToColumns","keyMaps","onCellDisplay","currentExpandedKeys","dataModel","currentData","defaultColumn","Header","accessor","show","isCheckbox","sortable","onChange","Cell","rowInfo","original","style","cursor","fontSize","padding","textAlign","userSelect","expander","Expander","isExpanded","index","column","assign","fileExtension","indexOf","isImage","cellData","image","src","alt","renderByData","height","i","columns","minRows","defaultPageSize","showPagination","SubComponent","row","currentExpandedKey","getTdProps","instance","handleOriginal","Container","Row","Col","xs","order","headersMap","defaultProps","name","companyName","jsonData","isMaster","firstName","lastName","bs","catchPhrase","detail","address","zipCode","city","street","address1","email","avatar","list","NesteadTable","sm","APP","ReactDOM","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.1cd664cb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class ControlButtons extends Component {\n  onTerminateClick = () => {\n    console.log(\"onTerminateClick\");\n  };\n\n  onRestartClick = () => {\n    console.log(\"onRestartClick\");\n  };\n  onCancelClick = () => {};\n  render() {\n    const { selectedItems } = this.props;\n    return (\n      <div>\n        <button\n          type=\"submit\"\n          className=\"btn-default\"\n          onClick={this.onTerminateClick}\n          disabled={selectedItems.length === 0}\n        >\n          <h6>Restart</h6>\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn-default\"\n          onClick={this.onRestartClick}\n          disabled={selectedItems.length === 0}\n        >\n          <h6>Terminate</h6>\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn-default\"\n          onClick={this.onCancelClick}\n          disabled={selectedItems.length === 0}\n        >\n          <h6>Cancel</h6>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ControlButtons;\n","import \"react-table/react-table.css\";\nimport './styles.css';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTable from 'react-table';\nimport ImageZoom from 'react-medium-image-zoom';\nimport _ from 'lodash';\nimport ControlButtons from \"./ControlButtons\";\nimport { Col, Container, Row } from 'react-bootstrap';\n\n\nconst MIN_ROWS = 0;\nconst PAGE_SIZE = 10;\n\nfunction uniqId() {\n    return `${Date.now()}${Math.random() * 10 | 0}`.substr(5);\n}\n\n/**\n * Get the width of text, used for adjusting column width on a table\n * @param {String} text the text that wants to get its width\n * @param {String} font the font style of current text\n * @returns {Number} the width (pixel)\n */\nfunction getTextWidth(text, font = 'bold 18px sans-serif') {\n    const minWidth = 25;\n    // re-use canvas object for better performance\n    const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\n    const context = canvas.getContext(\"2d\");\n    context.font = font;\n    const metrics = context.measureText(text);\n    return Math.max(metrics.width, minWidth);\n}\n\nfunction isArray(val) {\n    return Array.isArray(val);\n}\n\nfunction isObject(val) {\n    return val && typeof val === 'object' && val.constructor === Object;\n}\n\nfunction isCheckbox(val, key) {\n    return typeof val === 'boolean' && key === 'select'\n}\n\nfunction isImage(val) {\n    if (typeof val !== 'string') {\n        return false;\n    }\n    const fileExtension = val.split('.').pop();\n    const IMAGE_EXTENSIONS = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'tiff'];\n    return IMAGE_EXTENSIONS.indexOf(fileExtension) > -1;\n}\n\nfunction isHtml(val) {\n    return typeof val === 'string' && val.split('.').pop().includes('htm');\n}\n\nfunction getNatural(num) {\n    return num ? parseFloat(num.toString().split(\".\")[0]) : \"\";\n}\n\nfunction getDecimal(num) {\n    return num ? parseFloat(num.toString().split(\".\")[1]) : \"\";\n}\n\nclass ReactNestedTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            masterChecked: false,\n            allData: this.props.data,\n            expanded: {},\n            excludeColoumns: ['isMaster'],\n            isItemsSelected: false,\n            selectedItems: []\n        }\n    }\n\n    onMasterCheck(e, obj) {\n        console.log(\"onMasterCheck------\", e, this.state.allData.length, obj);\n        let templist = this.state.allData;\n        templist = templist.map((item) => {\n            item.select = e.target.checked;\n            if (isObject(item)) {\n                objectLoop(item);\n                function objectLoop(item) {\n                    Object.keys(item).forEach((key) => {\n                        item.select = e.target.checked;\n                        if (isObject(item[key])) {\n                            objectLoop(item[key]);\n                        }\n                    });\n                }\n            }\n            return item;\n        });\n        this.setState({\n            isItemsSelected: e.target.checked,\n            masterChecked: e.target.checked,\n            allData: templist\n        });\n    }\n\n    onItemCheck(e, obj) {\n        console.log(\"onItemClick------\", e, obj);\n        let tempSelectedItem = this.state.selectedItems;\n        // if (e.target.checked) {\n        //     tempSelectedItem.push(obj);\n        // } else {\n        //     tempSelectedItem = tempSelectedItem?.filter(\n        //         (el) => {\n        //             return el.id != obj.id;\n        //         });;\n        // }\n        let templist = this.state.allData;\n        templist = templist.map((item) => {\n            if (item.id === obj.id) {\n                objectLoop(item);\n                function objectLoop(item) {\n                    Object.keys(item).forEach((key) => {\n                        item.select = e.target.checked;\n                        // To store the values of selected items.\n                        if (e.target.checked) {\n                            let insertUniqueObject = function (arr, obj) {\n                                let isExist = arr.some(o => o.id === obj.id);\n                                if (!isExist)\n                                    tempSelectedItem.push(obj);\n                                return arr;\n                            }\n                            insertUniqueObject(tempSelectedItem, obj);\n                        } else {\n                            tempSelectedItem = tempSelectedItem?.filter(\n                                (el) => {\n                                    return el.id != obj.id;\n                                });;\n                        }\n                        //\n                        if (isObject(item[key])) {\n                            objectLoop(item[key]);\n                        }\n                        // if the subitem is an array\n                        if (isArray(item[key])) {\n                            item[key].map((subItems) => {\n                                if (isObject(subItems)) {\n                                    objectLoop(subItems);\n                                }\n                            });\n                        }\n                    });\n                }\n                return { ...item, select: e.target.checked };\n            } else {\n                if (item.id === getNatural(obj.id)) {\n                    objectLoop(item);\n                    function objectLoop(item) {\n                        Object.keys(item).forEach((key) => {\n                            if (item.id === obj.id) {\n                                item.select = e.target.checked;\n                            }\n                            if (isObject(item[key])) {\n                                objectLoop(item[key]);\n                            }\n                            // if the subitem is an array\n                            if (isArray(item[key])) {\n                                item[key].map((subItems) => {\n                                    if (isObject(subItems)) {\n                                        objectLoop(subItems);\n                                    }\n                                });\n                            }\n                        });\n                    }\n                    // To store the values of selected items.\n                    if (e.target.checked) {\n                        let insertUniqueObject = function (arr, obj) {\n                            let isExist = arr.some(o => o.id === obj.id);\n                            if (!isExist)\n                                tempSelectedItem.push(obj);\n                            return arr;\n                        }\n                        insertUniqueObject(tempSelectedItem, item);\n                    } else {\n                        tempSelectedItem = tempSelectedItem?.filter(\n                            (el) => {\n                                return el.id != obj.id;\n                            });;\n                    }\n                }\n            }\n            return item;\n        });\n        console.log(\"ssssssssssssssssss------\", tempSelectedItem);\n        this.setState({\n            selectedItems: tempSelectedItem,\n            isItemsSelected: e.target.checked,\n            allData: templist\n        });\n    }\n\n    /**\n     * Transfer data to columns that is used for rendering table\n     * @param {Array} data \n     * @returns {Array} an array of columns configuration\n     */\n    dataToColumns(data, keyMaps, onCellDisplay, currentExpandedKeys) {\n        if (data && data.length) {\n            const dataModel = data[0];\n\n            return Object.keys(dataModel).map(key => {\n                const currentData = dataModel[key];\n                const defaultColumn = {\n                    Header: keyMaps[key] || key,\n                    accessor: key,\n                    width: getTextWidth(key)\n                };\n\n                // to hide coloumns which are no required.\n                if (this.state.excludeColoumns.includes(key)) {\n                    return {\n                        show: false\n                    }\n                }\n\n                if (isCheckbox(currentData, key)) {\n                    return {\n                        sortable: false,\n                        Header: (obj) => <strong>\n                            <input\n                                type={\"checkbox\"} onChange={(e) => this.onMasterCheck(e, obj)}\n                                checked={this.state.masterChecked}\n                            />\n                        </strong>,\n                        width: 65,\n                        id: key,\n                        Cell: ({ ...rowInfo }) =>\n                            <div>\n                                <input\n                                    onChange={(e) => this.onItemCheck(e, rowInfo.original)}\n                                    type={\"checkbox\"}\n                                    checked={rowInfo.original.select} />\n                            </div>,\n                        style: {\n                            cursor: \"pointer\",\n                            fontSize: 25,\n                            padding: \"0\",\n                            textAlign: \"center\",\n                            userSelect: \"none\"\n                        }\n                    }\n                }\n\n                if (isObject(currentData) || isArray(currentData) || isHtml(currentData)) {\n                    return {\n                        expander: true,\n                        Header: () => <strong>{keyMaps[key] || key}</strong>,\n                        width: 65,\n                        id: key,\n                        Expander: ({ isExpanded, ...rowInfo }) =>\n                            <div>\n                                {isExpanded && currentExpandedKeys[rowInfo.index] === key\n                                    ? <span>&#x2299;</span>\n                                    : <span>&#x2295;</span>}\n                            </div>,\n                        style: {\n                            cursor: \"pointer\",\n                            fontSize: 25,\n                            padding: \"0\",\n                            textAlign: \"center\",\n                            userSelect: \"none\"\n                        }\n                    };\n                }\n\n                if (onCellDisplay) {\n                    const column = onCellDisplay(key, currentData);\n                    if (column) {\n                        return Object.assign({}, defaultColumn, column);\n                    }\n                }\n\n                if (isImage(currentData)) {\n                    return Object.assign({}, defaultColumn, {\n                        Cell: cellData => (\n                            <ImageZoom\n                                image={{\n                                    src: cellData.original[key],\n                                    alt: key,\n                                    className: 'image'\n                                }}\n                            />\n                        )\n                    });\n                }\n\n                return defaultColumn;\n            });\n\n        }\n        return [{ Header: 'ID', accessor: 'id' }];\n\n    }\n\n    /**\n     * Render a table/iframe/list based on data\n     * It will automatically change UI by the types of data\n     * @param {Array/Object/String} data data needs to be rendered\n     */\n    renderByData(data, keyMaps, onCellDisplay) {\n        if (!data) {\n            return null;\n        }\n\n        if (isHtml(data)) {\n            return <iframe src={data} style={{ height: \"50vh\", width: \"100%\" }} />;\n        }\n\n        if (isObject(data)) {\n            data = [data];\n        }\n\n        if (isArray(data)) {\n            const dataModel = data[0];\n\n            // used for storing expanding keys in different rows\n            let currentExpandedKeys = {};\n\n            // render as a list if there is only String or Number in Array\n            if (!isObject(dataModel) && !isArray(dataModel)) {\n                return <ul>\n                    {data.map((item, i) => <li key={`nested_table_${i}`}>{item}</li>)}\n                </ul>;\n            }\n\n            const columns = this.dataToColumns(data, keyMaps, onCellDisplay, currentExpandedKeys);\n\n            return <ReactTable\n                data={data}\n                // filterable\n                columns={columns}\n                className=\"-striped -highlight\"\n                minRows={0}\n                defaultPageSize={PAGE_SIZE}\n                showPagination={data && data.length > PAGE_SIZE ? true : false}\n                SubComponent={(row) => {\n                    // get current active key which needs to be expanded (triggered by clicking on a td element)\n                    const currentExpandedKey = currentExpandedKeys[row.index];\n\n                    return <div className=\"react-nested-table-inner\">\n                        <h4 className=\"title\">{keyMaps[currentExpandedKey] || currentExpandedKey}</h4>\n                        {this.renderByData(row.original[currentExpandedKey], keyMaps, onCellDisplay)}\n                    </div>\n                }}\n                // onExpandedChange={(newExpanded, index, event) => {console.log('onExpand', newExpanded, index, event)}}\n                getTdProps={(state, rowInfo, column, instance) => {\n                    return {\n                        onClick: (e, handleOriginal) => {\n                            // used to identify which column is expanding\n                            if (column.expander) {\n                                currentExpandedKeys[rowInfo.index] = column.id;\n                            }\n\n                            // IMPORTANT! React-Table uses onClick internally to trigger\n                            // events like expanding SubComponents and pivots.\n                            // By default a custom 'onClick' handler will override this functionality.\n                            // If you want to fire the original onClick handler, call the\n                            // 'handleOriginal' function.\n                            if (handleOriginal) {\n                                handleOriginal()\n                            }\n                        }\n                    }\n                }}\n            />\n        }\n    }\n\n    render() {\n        return <>\n            <br />\n            <Container>\n                <Row>\n                    <Col xs={{ order: 'first' }}></Col>\n                    <Col xs>\n                        <ControlButtons\n                            selectedItems={this.state.selectedItems} />\n                    </Col>\n                    <Col xs={{ order: 'last' }}></Col>\n                </Row>\n            </Container>\n            <br />\n            {this.renderByData(\n                this.state.allData,\n                this.props.headersMap,\n                this.props.onCellDisplay\n            )}\n        </>\n    }\n}\n\nReactNestedTable.defaultProps = {\n    data: [],\n    headersMap: {}\n}\n\nReactNestedTable.propTypes = {\n    /**\n     * data, should be a json\n     */\n    data: PropTypes.array.isRequired,\n    /**\n     *  Mapping between data key and column header title for display\n     */\n    headersMap: PropTypes.object,\n    onCellDisplay: PropTypes.func\n}\n\nexport default ReactNestedTable;","import React, { Component } from \"react\";\nimport ReactNestedTable from \".\";\nimport { Col, Container, FormControl, InputGroup, Row } from \"react-bootstrap\";\n\nconst headersMap = {\n  name: \"Full Name\",\n  companyName: \"Company Name\"\n};\n\nconst onCellDisplay = () => {\n  return true;\n};\n\nconst jsonData = [\n  {\n    isMaster: false,\n    select: false,\n    id: 0,\n    firstName: \"Janae\",\n    lastName: \"Considine\",\n    bs: \"out-of-the-box strategize methodologies\",\n    catchPhrase: \"Advanced tangible neural-net\",\n    companyName: \"Greenholt, Smith and Brekke\",\n    detail: {\n      isMaster: false,\n      select: false,\n      id: 0.1,\n      firstName: \"Tiaxxxxxnna\",\n      lastName: \"Hyatt\",\n      address: [\n        {\n          isMaster: false,\n          select: false,\n          id: 0.2,\n          zipCode: \"0351s0\",\n          city: \"North Laurineshire\",\n          street: \"Jerde Spring\"\n        },\n        {\n          isMaster: false,\n          select: false,\n          id: 0.3,\n          zipCode: \"03510\",\n          city: \"North Laurineshire\",\n          street: \"Jerde Spring\"\n        }\n      ],\n      address1: {\n        isMaster: false,\n        select: false,\n        id: 0.4,\n        zipCode: \"0351s0\",\n        city: \"North Laurineshire\",\n        street: \"Jerde Spring\"\n      },\n      email: \"Niko95@hotmail.com\",\n      avatar: \"https://s3.amazonaws.com/uifaces/faces/twitter/jagan123/128.jpg\",\n      list: [\"repellat\", \"deserunt\", \"praesentium\"]\n    }\n  },\n  {\n    isMaster: false,\n    select: false,\n    id: 1,\n    firstName: \"Kelvin\",\n    lastName: \"Rogahn\",\n    bs: \"efficient leverage deliverables\",\n    catchPhrase: \"Extended zero defect monitoring\",\n    companyName: \"Durgan - Monahan\",\n    detail: {\n      isMaster: false,\n      select: false,\n      id: 1.1,\n      firstName: \"Colt\",\n      lastName: \"Christiansen\",\n      address: {\n        isMaster: false,\n        select: false,\n        id: 1.2,\n        zipCode: \"30922\",\n        city: \"Everettberg\",\n        street: \"Herman Lakes\"\n      },\n      email: \"Kris.Veum52@hotmail.com\",\n      avatar:\n        \"https://s3.amazonaws.com/uifaces/faces/twitter/Skyhartman/128.jpg\",\n      list: [\"adipisci\", \"et\", \"voluptatem\"]\n    }\n  },\n  {\n    isMaster: false,\n    select: false,\n    id: 2,\n    firstName: \"Consuelo\",\n    lastName: \"Schulist\",\n    bs: \"scalable monetize platforms\",\n    catchPhrase: \"Centralized explicit success\",\n    companyName: \"Davis, Anderson and Mante\",\n    detail: {\n      isMaster: false,\n      select: false,\n      id: 2.1,\n      firstName: \"Leta\",\n      lastName: \"McDermott\",\n      address: {\n        isMaster: false,\n        select: false,\n        id: 2.2,\n        zipCode: \"46540-8948\",\n        city: \"East Veldaport\",\n        street: \"Douglas Glens\"\n      },\n      email: \"Rodrick_Hodkiewicz@yahoo.com\",\n      avatar:\n        \"https://s3.amazonaws.com/uifaces/faces/twitter/noufalibrahim/128.jpg\",\n      list: [\"vel\", \"veritatis\", \"occaecati\"]\n    }\n  },\n  {\n    isMaster: false,\n    select: false,\n    id: 3,\n    firstName: \"Khalil\",\n    lastName: \"Nienow\",\n    bs: \"magnetic iterate technologies\",\n    catchPhrase: \"Fully-configurable analyzing monitoring\",\n    companyName: \"Skiles Inc\",\n    detail: {\n      isMaster: false,\n      select: false,\n      id: 3.1,\n      firstName: \"Michale\",\n      lastName: \"Jones\",\n      address: {\n        isMaster: false,\n        select: false,\n        id: 3.2,\n        zipCode: \"46856-0480\",\n        city: \"Georgettemouth\",\n        street: \"Ryley Haven\"\n      },\n      email: \"Edgardo22@gmail.com\",\n      avatar:\n        \"https://s3.amazonaws.com/uifaces/faces/twitter/claudioguglieri/128.jpg\",\n      list: [\"unde\", \"earum\", \"aperiam\"]\n    }\n  },\n  {\n    isMaster: false,\n    select: false,\n    id: 4,\n    firstName: \"Gregg\",\n    lastName: \"Renner\",\n    bs: \"granular leverage infomediaries\",\n    catchPhrase: \"Fundamental fault-tolerant task-force\",\n    companyName: \"Schiller Group\",\n    detail: {\n      isMaster: false,\n      select: false,\n      id: 4.1,\n      firstName: \"Fred\",\n      lastName: \"Parisian\",\n      address: {\n        isMaster: false,\n        select: false,\n        id: 4.2,\n        zipCode: \"33580\",\n        city: \"New Mustafachester\",\n        street: \"Stanley Extensions\"\n      },\n      email: \"Ashlynn_Hayes@hotmail.com\",\n      avatar:\n        \"https://s3.amazonaws.com/uifaces/faces/twitter/jehnglynn/128.jpg\",\n      list: [\"et\", \"enim\", \"omnis\"]\n    }\n  },\n  {\n    isMaster: false,\n    select: false,\n    id: 5,\n    firstName: \"Armand\",\n    lastName: \"Stiedemann\",\n    bs: \"seamless exploit technologies\",\n    catchPhrase: \"Sharable attitude-oriented forecast\",\n    companyName: \"Simonis, Spencer and MacGyver\",\n    detail: {\n      isMaster: false,\n      select: false,\n      id: 5.1,\n      firstName: \"Madisyn\",\n      lastName: \"Lindgren\",\n      address: {\n        isMaster: false,\n        select: false,\n        id: 5.2,\n        zipCode: \"58391-2167\",\n        city: \"South Tobin\",\n        street: \"O'Keefe Place\"\n      },\n      email: \"Myrtle_Gleichner30@hotmail.com\",\n      avatar:\n        \"https://s3.amazonaws.com/uifaces/faces/twitter/borantula/128.jpg\",\n      list: [\"qui\", \"perspiciatis\", \"iusto\"]\n    }\n  },\n  {\n    isMaster: false,\n    select: false,\n    id: 6,\n    firstName: \"Pete\",\n    lastName: \"Adams\",\n    bs: \"end-to-end morph partnerships\",\n    catchPhrase: \"Fundamental cohesive emulation\",\n    companyName: \"Hansen - Kertzmann\",\n    detail: {\n      isMaster: false,\n      select: false,\n      id: 6.1,\n      firstName: \"Bertha\",\n      lastName: \"Buckridge\",\n      address: {\n        isMaster: false,\n        select: false,\n        id: 6.2,\n        zipCode: \"25904\",\n        city: \"Rippinport\",\n        street: \"Henriette Grove\"\n      },\n      email: \"Christop.Ullrich58@hotmail.com\",\n      avatar:\n        \"https://s3.amazonaws.com/uifaces/faces/twitter/rachelreveley/128.jpg\",\n      list: [\"tempore\", \"qui\", \"numquam\"]\n    }\n  }\n];\n\nexport class NesteadTable extends Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col sm={2}></Col>\n          <Col sm={10}>\n            <ReactNestedTable\n              data={jsonData}\n              headersMap={headersMap}\n              onCellDisplay={onCellDisplay}\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default NesteadTable;\n","\nimport React, { Component } from \"react\";\nimport NesteadTable from \"./nestead-table/NesteadTable.js\";\nexport class APP extends Component {\n  render() {\n    return (\n      <div>\n        <NesteadTable />\n      </div>\n    );\n  }\n}\n\nexport default APP;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}